Создание статической библиотеки в C включает несколько шагов: написание
исходного кода, компиляция исходного кода в объектные файлы, а затем объединение
этих объектных файлов в статическую библиотеку. Давайте рассмотрим этот процесс
шаг за шагом.

### Шаг 1: Написание исходного кода

Сначала пишем исходный код для вашей библиотеки. Например, создадим библиотеку с
несколькими функциями.

**Файл `mylib.c`:**


// mylib.c
#include <stdio.h>

#include "mylib.h"

void print_message(const char *msg) {
    printf("Message: %s\n", msg);
}

int add(int a, int b) {
    return a + b;
}


**Файл `mylib.h`:**


// mylib.h
#ifndef MYLIB_H
#define MYLIB_H

void print_message(const char *msg);
int add(int a, int b);

#endif // MYLIB_H


### Шаг 2: Компиляция исходного кода в объектные файлы

Компилируем исходный код в объектные файлы (`.o` файлы). Для этого используем
компилятор, например, `gcc`:


gcc -c mylib.c -o mylib.o


Флаг `-c` указывает компилятору скомпилировать файл в объектный файл, не
производя линковку.

### Шаг 3: Создание статической библиотеки

Используем утилиту `ar` для создания архива (статической библиотеки) из
объектных файлов:


ar rcs libmylib.a mylib.o


- `r` — добавляет объектные файлы в архив.
- `c` — создаёт новый архив.
- `s` — создаёт индекс для быстрого поиска.

### Шаг 4: Использование библиотеки

Теперь, когда у нас есть статическая библиотека `libmylib.a`, мы можем
использовать её в других проектах. Для этого:

1. **Напишите тестовый файл, который использует библиотеку.**

**Файл `main.c`:**


// main.c
#include "mylib.h"

int main() {
    print_message("Hello, world!");
    int result = add(3, 4);
    printf("Sum: %d\n", result);
    return 0;
}


2. **Скомпилируйте тестовый файл, связывая его со статической библиотекой.**


gcc main.c -L. -lmylib -o myprogram


- `-L.` — указывает компилятору искать библиотеки в текущем каталоге.
- `-lmylib` — указывает линковщику использовать библиотеку `libmylib.a`.

### Шаг 5: Запуск программы

Теперь вы можете запустить вашу программу:


./myprogram


### Резюме

1. **Написание исходного кода**: Создайте `.c` и `.h` файлы.
2. **Компиляция в объектные файлы**: Используйте `gcc -c`.
3. **Создание библиотеки**: Используйте `ar` для создания архива.
4. **Использование библиотеки**: Линкуйте её с вашими программами при
компиляции.
5. **Запуск программы**: Запустите вашу программу, чтобы увидеть результат.

Этот процесс позволяет создать статическую библиотеку, которая может быть
использована в различных проектах, обеспечивая повторное использование кода и
упрощая управление зависимостями.
